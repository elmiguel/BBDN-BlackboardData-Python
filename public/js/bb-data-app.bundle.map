{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./client/ts/bb-data-app.ts","webpack:///./client/ts/bb-data-variables.ts","webpack:///./client/ts/components/bb-data-basic-table-alt-2.ts","webpack:///./client/ts/core/bb-data-abstract-class.ts","webpack:///./client/ts/core/bb-data-service.ts","webpack:///./client/ts/core/bb-data-state.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","customElements","define","bbDataDemo","window","document","getElementById","querySelectorAll","forEach","el","addEventListener","e","preventDefault","btn","target","config","JSON","parse","dataset","queryConfig","setAttribute","queryname","bbDataVars","host","BbDataBasicTableAlt2Component","super","bbDataService","this","self","template","attachShadow","shadowRoot","appendChild","content","cloneNode","queryName","getAttribute","select","type","format","console","log","attrName","oldVal","newVal","data","runQuery2","updateTable","table","querySelector","innerHTML","dataTable","simpleDatatables","DataTable","columns","BbDataAbstractClass","HTMLElement","irsc","constructor","observedAttributes","length","attribute","test","pascalCase","attrValue","removeAttribute","oldValue","newValue","slot","titleize","innerText","split","map","part","idx","join","charAt","toUpperCase","slice","BbDataService","bbDataUrl","dataState","bbdata","PathwayService","params","isTest","fetch","then","res","json","_data","state","updateState","catch","err","url","BbDataState","_unsubscribe","rxjs","Subject","BehaviorSubject","pipe","operators","distinctUntilChanged","filter","_state","next","event","CustomEvent","detail","bubbles","composed","dt","dispatchEvent","pluck"],"mappings":"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","file":"public/js/bb-data-app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./client/ts/bb-data-app.ts\");\n","declare var window: Window & typeof globalThis;\n\n// import { BbDataBasicTableComponent } from './components/bb-data-basic-table';\nimport { BbDataBasicTableAltComponent } from './components/bb-data-basic-table-alt';\nimport { BbDataBasicTableAlt2Component } from './components/bb-data-basic-table-alt-2';\n\n// customElements.define('bb-data-table-basic', BbDataBasicTableComponent);\n// customElements.define('bb-data-table-basic-alt', BbDataBasicTableAltComponent);\ncustomElements.define(\n    'bb-data-table-basic-alt2',\n    BbDataBasicTableAlt2Component\n);\n// console.log('created irsc custom elements...');\n\nconst bbDataDemo = window.document.getElementById('bb-data-demo');\nconst queries = window.document.querySelectorAll('.query');\n\n// tslint:disable-next-line:only-arrow-functions\nqueries.forEach(function(el) {\n    // tslint:disable-next-line: only-arrow-functions\n    el.addEventListener('click', function(e) {\n        e.preventDefault();\n        const btn: any = e.target;\n        const config = JSON.parse(btn.dataset.queryConfig);\n        bbDataDemo.setAttribute('queryname', config.queryname);\n    });\n});\n","export const bbDataVars: any = {\n    host: 'http://localhost:3000'\n};\n","declare var rxjs: any;\ndeclare var simpleDatatables: any;\nimport { BbDataAbstractClass } from '../core/bb-data-abstract-class';\nimport { BbDataService, IBbData } from '../core/bb-data-service';\nimport { BbDataState, IBbDataState } from '../core/bb-data-state';\nexport class BbDataBasicTableAlt2Component extends BbDataAbstractClass {\n    static get observedAttributes() {\n        return ['queryname', 'select', 'type', 'format'];\n    }\n    private data: any; // BehaviorSubject()\n    private table: any;\n    private dataTable: any;\n    private bbDataService: BbDataService = new BbDataService();\n    private template: any;\n    private queryName: string;\n    private select: string;\n    private type: string;\n    private format: string;\n    private self: any;\n    constructor() {\n        super();\n        // ts can be annoying, se we create a reference to this class\n        // slots getters and setters are dynamically added to the class\n        // so creating self at the top level will reference the current element state\n        // remove this comment if you are experiencing issue with access slots\n        // then reference this.self[slotName] instead of this.slotName\n        this.self = this;\n\n        // this.template = window.document.createElement('table');\n        this.template = window.document.getElementById(\n            'bb-data-table-basic-tmpl-alt'\n        );\n        // console.log('[Bb Data Table - Basic Loaded]');\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(this.template.content.cloneNode(true));\n        this.queryName = this.getAttribute('queryname');\n        this.select = this.getAttribute('select');\n        this.type = this.getAttribute('type');\n        this.format = this.getAttribute('format');\n        console.log(`[queryName] ${this.queryName}`);\n    }\n\n    public connectedCallback() {}\n\n    public disconnectedCallback() {}\n\n    // Called anytime the 'selected' attribute is changed\n    // BbDataAbstractClass contains this function, so consider\n    // this as an override\n    public async attributeChangedCallback(\n        attrName: any,\n        oldVal: any,\n        newVal: any\n    ) {\n        if (oldVal !== newVal && attrName === 'queryname' && newVal) {\n            console.log(attrName, oldVal, newVal);\n            this[attrName] = newVal;\n            const data = await this.bbDataService.runQuery2(newVal);\n            this.data = data[newVal];\n            console.log('[change detection]', this.data);\n            this.updateTable();\n        }\n    }\n\n    public updateTable() {\n        console.log('[updateTable] re-rendering table data...');\n        console.log('=== DATA ===/>', this.data);\n        this.table = this.shadowRoot.querySelector('table');\n        this.table.innerHTML = '';\n        // this.dataTable = null;\n        this.dataTable = new simpleDatatables.DataTable(this.table, {\n            data: this.data,\n            columns: [\n                {\n                    select: +this.select,\n                    type: this.type,\n                    format: this.format\n                }\n            ]\n        });\n    }\n}\n","declare var window: any;\nexport class BbDataAbstractClass extends HTMLElement {\n    // tslint:disable-next-line:cognitive-complexity\n    constructor() {\n        super();\n\n        const self: any = this;\n        // Check to see if observedAttributes are defined and has length\n        if (!window.irsc) {\n            window.irsc = {};\n        }\n        if (\n            self.constructor.observedAttributes &&\n            self.constructor.observedAttributes.length\n        ) {\n            // Loop through the observed attributes\n            self.constructor.observedAttributes.forEach((attribute: any) => {\n                if (attribute !== 'data') {\n                    if (/[-]/gim.test(attribute)) {\n                        attribute = this.pascalCase(attribute);\n                    }\n                    // console.log(attribute);\n                    // Dynamically define the property getter/setter d\n                    Object.defineProperty(this, attribute, {\n                        get() {\n                            return this.getAttribute(attribute);\n                        },\n                        set(attrValue) {\n                            if (attrValue) {\n                                this.setAttribute(attribute, attrValue);\n                            } else {\n                                this.removeAttribute(attribute);\n                            }\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    public attributeChangedCallback(\n        attrName: string,\n        oldValue: any,\n        newValue: any\n    ) {\n        if (oldValue !== newValue) {\n            console.log('Abstract attributeChangedCallback....');\n            const slot: any = this[\n                `slot${this.titleize(this.pascalCase(attrName))}`\n            ];\n\n            if (slot) {\n                slot.innerText = newValue;\n            }\n        }\n    }\n\n    private pascalCase(attribute: string) {\n        return attribute\n            .split('-')\n            .map((part: string, idx: number) => {\n                if (idx === 0) {\n                    return part;\n                }\n                return this.titleize(part);\n            })\n            .join('');\n    }\n\n    private titleize(part: string) {\n        return part.charAt(0).toUpperCase() + part.slice(1);\n    }\n}\n","declare var window: any;\ndeclare var rxjs: any;\nimport { bbDataVars } from '../bb-data-variables';\nimport { BbDataState } from './bb-data-state';\nexport interface IBbData {\n    [key: string]: any;\n}\n\nexport class BbDataService {\n    // tslint:ignore\n    public bbdata: any;\n    private bbDataUrl: string = `${bbDataVars.host}/queries`;\n    private dataState: BbDataState = new BbDataState();\n\n    constructor() {\n        if (!window.hasOwnProperty('bbdata')) {\n            window.bbdata = {};\n        }\n\n        if (!window.irsc.hasOwnProperty('BbDataService')) {\n            window.irsc.PathwayService = this;\n        }\n\n        this.bbdata = window.bbdata;\n    }\n\n    public isTest(queryName: string): boolean {\n        if (\n            !queryName ||\n            queryName === 'test' ||\n            queryName === '' ||\n            typeof queryName === 'undefined'\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    public runQuery(queryName: string, params: any = null) {\n        console.log(`[BbDataState.runQuery('${queryName}', ${params})]`);\n        if (this.isTest(queryName)) {\n            console.log(`${bbDataVars.host}/test`);\n            fetch(`${bbDataVars.host}/test`)\n                .then((res: any) => res.json())\n                .then((_data: any) => {\n                    console.log(_data);\n                    const state: any = {};\n                    state[queryName] = _data;\n                    this.dataState.updateState(state);\n                })\n                .catch((err: any) => {\n                    console.log('There was a problem loading test query.....');\n                    console.log(err);\n                });\n        } else {\n            console.log('this should not run if test!!!!');\n            if (\n                !this.bbdata.hasOwnProperty(queryName) &&\n                !this.isTest(queryName)\n            ) {\n                fetch(`${this.bbDataUrl}/${queryName}`)\n                    .then((res: any) => res.json())\n                    // .then((res: any) => res.json())\n                    .then((data: any) => {\n                        console.log(data);\n                        const state: any = {};\n                        state[queryName] = data;\n                        this.dataState.updateState(state);\n                    })\n                    .catch((err: any) => {\n                        console.log(\n                            `There was an error in retrieving data with queryName: ${queryName}`\n                        );\n                        console.log(err);\n                    });\n            }\n        }\n    }\n\n    public async runQuery2(\n        queryName: string,\n        params: any = null\n    ): Promise<void> {\n        console.log(`[BbDataService.runQuery('${queryName}', ${params})]`);\n        let url = '';\n        if (this.isTest(queryName)) {\n            url = `${bbDataVars.host}/test`;\n        } else {\n            url = `${this.bbDataUrl}/${queryName}`;\n        }\n        console.log(`${bbDataVars.host}/test`);\n        try {\n            const _data = await fetch(url).then((res: any) => res.json());\n            console.log('[BbDataService.runQuery.fetch(url)]...', _data);\n            const state: any = {};\n            state[queryName] = _data;\n            return state;\n        } catch (err) {\n            console.log(\n                `There was an error in retrieving data with queryName: ${queryName}`\n            );\n            console.log(err);\n        }\n    }\n}\n","declare var window: any;\ndeclare var rxjs: any;\nexport interface IBbDataState {\n    [key: string]: any;\n}\nexport class BbDataState {\n    public state: any;\n    private _unsubscribe: any = new rxjs.Subject();\n    constructor() {\n        // setup _state filtering...\n\n        if (!window.hasOwnProperty('bbdata')) {\n            window.bbdata = {};\n        }\n\n        if (!window.bbdata.hasOwnProperty('BbDataState')) {\n            window.bbdata.BbDataState = this;\n        }\n\n        const INITIAL_STATE: IBbDataState = {};\n        this.state = new rxjs.BehaviorSubject(INITIAL_STATE).pipe(\n            rxjs.operators.distinctUntilChanged(),\n            rxjs.operators.filter((_state: IBbDataState) => _state)\n        );\n    }\n\n    public updateState(state: IBbDataState) {\n        console.log(`[BbDataState.updateState()]`, state);\n        this.state.next(state);\n        const event = new CustomEvent('bb-data-update', {\n            detail: state,\n            bubbles: true,\n            composed: true\n        });\n        window.document\n            .querySelectorAll(\"[class*='bb-data-table']\")\n            .forEach((dt: any) => {\n                dt.dispatchEvent(event);\n            });\n    }\n\n    public getStateSlice(slice: string) {\n        // console.log(`[BbDataState.getStateSlice()]`, slice);\n        return this.state.pipe(rxjs.operators.pluck(slice));\n    }\n\n    public freeze() {\n        this._unsubscribe.next(null);\n    }\n}\n"],"sourceRoot":""}