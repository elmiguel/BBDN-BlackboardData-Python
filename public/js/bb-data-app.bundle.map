{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./client/ts/bb-data-app.ts","webpack:///./client/ts/components/bb-data-basic-table.ts","webpack:///./client/ts/core/bb-data-abstract-class.ts","webpack:///./client/ts/core/bb-data-service.ts","webpack:///./client/ts/core/bb-data-state.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","customElements","define","console","log","BbDataBasicTableComponent","super","bbDataService","unsubscribe","rxjs","Subject","this","template","window","document","createElement","attachShadow","shadowRoot","appendChild","queryName","getAttribute","table","querySelector","dataTable","simpleDatatables","DataTable","data","columns","select","type","format","runQuery","dataState","getStateSlice","pipe","operators","tap","subscribe","insert","next","BbDataAbstractClass","HTMLElement","self","irsc","constructor","observedAttributes","length","forEach","attribute","test","pascalCase","attrValue","setAttribute","removeAttribute","attrName","oldValue","newValue","slot","titleize","innerText","split","map","part","idx","join","charAt","toUpperCase","slice","BbDataService","bbDataUrl","bbdata","PathwayService","params","fetch","then","res","json","catch","err","BehaviorSubject","from","_data","set","takeUntil","switchMap","BbDataState","_unsubscribe","state","filter","_state","pluck"],"mappings":"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","file":"public/js/bb-data-app.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./client/ts/bb-data-app.ts\");\n","declare var window: Window & typeof globalThis;\ndeclare var simpleDatatables: any;\nimport { BbDataBasicTableComponent } from './components/bb-data-basic-table';\ncustomElements.define('bb-data-table-basic', BbDataBasicTableComponent);\nconsole.log('created irsc custom elements...');\n","declare var rxjs: any;\ndeclare var simpleDatatables: any;\nimport { BbDataAbstractClass } from '../core/bb-data-abstract-class';\nimport { BbDataService, IBbData } from '../core/bb-data-service';\nimport { BbDataState, IBbDataState } from '../core/bb-data-state';\nexport class BbDataBasicTableComponent extends BbDataAbstractClass {\n    static get observedAttributes() {\n        return ['queryname'];\n    }\n    private data: any; // BehaviorSubject()\n    private table: any;\n    private dataTable: any;\n    private bbDataService: BbDataService = new BbDataService();\n    private unsubscribe: any = new rxjs.Subject();\n    private template: any;\n    private queryName: string;\n    private dataState: IBbDataState;\n\n    constructor() {\n        super();\n        // ts can be annoying, se we create a reference to this class\n        // slots getters and setters are dynamically added to the class\n        // so creating self at the top level will reference the current element state\n        // remove this comment if you are experiencing issue with access slots\n        // then reference this.self[slotName] instead of this.slotName\n        // const self: any = this;\n\n        this.template = window.document.createElement('table');\n        console.log('[Bb Data Table - Basic Loaded]');\n        this.attachShadow({ mode: 'open' });\n        this.shadowRoot.appendChild(this.template);\n        this.queryName = this.getAttribute('queryName');\n        console.log(`[queryName] ${this.queryName}`);\n        this.table = this.shadowRoot.querySelector('table');\n        this.dataTable = new simpleDatatables.DataTable(this.table, {\n            data: {},\n            columns: [\n                {\n                    select: 3,\n                    type: 'date',\n                    format: 'MM/DD/YYYY'\n                }\n            ]\n        });\n        this.data = this.bbDataService.runQuery(this.queryName);\n        this.dataState = new BbDataState(this.queryName);\n    }\n\n    public connectedCallback() {\n        // this.data\n        //     .pipe(\n        //         rxjs.operators.takeUntil(this.unsubscribe),\n        //         rxjs.operators.filter((data: IBbData) => data !== null),\n        //         rxjs.operators.map((data: IBbData) => {\n        //             // mutate the state if needed then return the new state\n        //             // const _state: IBbDataState = { ...data };\n        //             // return _state;\n\n        //             // for now just return the data as state as we do not know what data\n        //             // we are returning, return as a copy for demostrative purposes\n        //             return { ...data };\n        //         })\n        //     )\n        //     .subscribe((data: IBbData) => {\n        //         console.log('[this.data.pipe.subscribe]', data);\n        //         this.dataState.updateState(data);\n        //         // if you want this to be one-time and not streamed this disconnect...\n        //         this.disconnectedCallback();\n        //     });\n\n        this.dataState\n            .getStateSlice(this.queryName)\n            .pipe(\n                rxjs.operators.tap(console.log)\n                // rxjs.operators.switchMap((slice: any) => slice)\n            )\n            .subscribe((data: IBbData) => {\n                console.log(`[dataState.getStateSlice.subscribe()]`, data);\n                // this.dataTable.data = null;\n                this.dataTable.insert(data);\n                // this.dataTable.update();\n                // this.dataTable.refresh();\n            });\n    }\n\n    public disconnectedCallback() {\n        this.unsubscribe.next();\n    }\n}\n","declare var window: any;\nexport class BbDataAbstractClass extends HTMLElement {\n    // tslint:disable-next-line:cognitive-complexity\n    constructor() {\n        super();\n\n        const self: any = this;\n        // Check to see if observedAttributes are defined and has length\n        if (!window.irsc) {\n            window.irsc = {};\n        }\n        if (\n            self.constructor.observedAttributes &&\n            self.constructor.observedAttributes.length\n        ) {\n            // Loop through the observed attributes\n            self.constructor.observedAttributes.forEach((attribute: any) => {\n                if (attribute !== 'data') {\n                    if (/[-]/gim.test(attribute)) {\n                        attribute = this.pascalCase(attribute);\n                    }\n                    // console.log(attribute);\n                    // Dynamically define the property getter/setter d\n                    Object.defineProperty(this, attribute, {\n                        get() {\n                            return this.getAttribute(attribute);\n                        },\n                        set(attrValue) {\n                            if (attrValue) {\n                                this.setAttribute(attribute, attrValue);\n                            } else {\n                                this.removeAttribute(attribute);\n                            }\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    public attributeChangedCallback(\n        attrName: string,\n        oldValue: any,\n        newValue: any\n    ) {\n        const slot: any = this[\n            `slot${this.titleize(this.pascalCase(attrName))}`\n        ];\n\n        if (slot) {\n            slot.innerText = newValue;\n        }\n    }\n\n    private pascalCase(attribute: string) {\n        return attribute\n            .split('-')\n            .map((part: string, idx: number) => {\n                if (idx === 0) {\n                    return part;\n                }\n                return this.titleize(part);\n            })\n            .join('');\n    }\n\n    private titleize(part: string) {\n        return part.charAt(0).toUpperCase() + part.slice(1);\n    }\n}\n","declare var window: any;\ndeclare var rxjs: any;\n\nexport interface IBbData {\n    [key: string]: any;\n}\n\nexport class BbDataService {\n    public bbdata: any;\n    private unsubscribe: any = new rxjs.Subject();\n    private bbDataUrl: string = 'http://localhost:3000/queries';\n    constructor() {\n        // console.(this.http);\n        if (!window.hasOwnProperty('bbdata')) {\n            window.bbdata = {};\n        }\n\n        if (!window.irsc.hasOwnProperty('BbDataService')) {\n            window.irsc.PathwayService = this;\n        }\n\n        this.bbdata = window.bbdata;\n    }\n\n    // public async getClockHoursFilter() {\n    //     this.clockHoursFilter = await fetch(this.filterUrl)\n    //         .then((res: any) => res.json())\n    //         .then((res: any) => res.filter)\n    //         .catch((err: any) => {\n    //             console.log(\n    //                 'There was an error retrieving the clock hours filter.'\n    //             );\n    //             console.log(err.message);\n    //         });\n    // }\n\n    public async runQuery(queryName: string, params: any = null) {\n        if (queryName === 'test') {\n            const data = await fetch('http://localhost:5000/test')\n                .then((res: any) => res.json())\n                .catch((err: any) => {\n                    console.log('There was a problem loading test query.....');\n                    console.log(err);\n                });\n            return new rxjs.BehaviorSubject(rxjs.from(data)).pipe(\n                rxjs.operators.tap((_data: any) => {\n                    console.log('ASYNC======>');\n                    console.log(_data);\n                })\n            );\n        }\n\n        if (!this.bbdata.hasOwnProperty(queryName)) {\n            const data = await fetch(`${this.bbDataUrl}/${queryName}`)\n                .then((res: any) => res.json())\n                .then(async (res: any) => {\n                    // do something with data then return data\n                    // TODO: do something with data and return new data\n                    return res;\n                })\n                .catch((err: any) => {\n                    console.log(\n                        `There was an error in retrieving data with queryName: ${queryName}`\n                    );\n                    console.log(err);\n                });\n\n            this.bbdata.set(\n                queryName,\n                new rxjs.BehaviorSubject(rxjs.from(data))\n            );\n        }\n\n        return this.bbdata.get(queryName).pipe(\n            rxjs.operators.takeUntil(this.unsubscribe),\n            rxjs.operators.switchMap((data: any) => rxjs.from(data))\n        );\n    }\n\n    public disconnectedCallback() {\n        this.unsubscribe.next(null);\n    }\n}\n","declare var rxjs: any;\nexport interface IBbDataState {\n    [key: string]: any;\n}\nexport class BbDataState {\n    public state: any;\n    private _unsubscribe: any = new rxjs.Subject();\n    constructor(queryName: string) {\n        // setup _state filtering...\n        const INITIAL_STATE: IBbDataState = {};\n        this.state = new rxjs.BehaviorSubject(INITIAL_STATE).pipe(\n            rxjs.operators.filter(\n                (_state: IBbDataState) => _state && _state[queryName]\n            )\n        );\n    }\n\n    public updateState(state: IBbDataState) {\n        console.log(`[BbDataState.updateState()]`, state);\n        this.state.next(state);\n    }\n\n    public getStateSlice(slice: string) {\n        console.log(`[BbDataState.getStateSlice()]`, slice);\n        return this.state.pipe(rxjs.operators.pluck(slice));\n    }\n\n    public freeze() {\n        this._unsubscribe.next(null);\n    }\n}\n"],"sourceRoot":""}